# change apptest to name of the project
version: '3'
services:
  nginx:
    build:
      dockerfile: ./apptest/docker/nginx.dockerfile
      context: .
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    networks:
      - 'production-network'
    depends_on:
      - 'app1'
      - 'app2'
      - 'app3'
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgresql
      - POSTGRES_PASSWORD=production
    volumes:
      - ./postgres:/var/lib/postgresql/data
    ports:
      - 5432
    networks:
      - 'production-network'
  app1:
    build:
      dockerfile: './apptest/docker/rails.dockerfile'
      context: .
    container_name: app1
    environment:
      - RAILS_ENV=${RAILS_ENV}
      - RAILS_SECRET=${RAILS_SECRET_KEY_BASE}
      - DEVISE_SECRET_KEY=${DEVISE_SECRET_KEY}
      - DISABLE_DATABASE_ENVIRONMENT_CHECK=1
    ports:
      - 3000
    volumes:
      - ./apptest:/apptest
    networks:
      - 'production-network'
    depends_on:
      - 'db'
  app2:
    build:
      dockerfile: './apptest/docker/rails.dockerfile'
      context: .
    container_name: app2
    environment:
      - RAILS_ENV=${RAILS_ENV}
      - RAILS_SECRET=${RAILS_SECRET_KEY_BASE}
      - DEVISE_SECRET_KEY=${DEVISE_SECRET_KEY}
    ports:
      - 3000
    volumes:
      - ./apptest:/apptest
    networks:
      - 'production-network'
    depends_on:
      - 'db'
  app3:
    build:
      dockerfile: './apptest/docker/rails.dockerfile'
      context: .
    container_name: app3
    environment:
      - RAILS_ENV=${RAILS_ENV}
      - RAILS_SECRET=${RAILS_SECRET_KEY_BASE}
      - DEVISE_SECRET_KEY=${DEVISE_SECRET_KEY}
    ports:
      - 3000
    volumes:
      - ./apptest:/apptest 
    networks:
      - 'production-network'
    depends_on:
      - 'db'
networks:
  production-network:
    driver: bridge